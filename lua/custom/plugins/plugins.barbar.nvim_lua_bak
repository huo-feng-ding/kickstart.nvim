  {
    'romgrk/barbar.nvim',
    dependencies = {
      'lewis6991/gitsigns.nvim', -- OPTIONAL: for git status
      'nvim-tree/nvim-web-devicons', -- OPTIONAL: for file icons
    },
    init = function()
      vim.g.barbar_auto_setup = false

      local map = vim.api.nvim_set_keymap
      local opts = { noremap = true, silent = true }

      -- Move to previous/next
      map('n', '<A-,>', '<Cmd>BufferPrevious<CR>', opts)
      map('n', '<A-.>', '<Cmd>BufferNext<CR>', opts)

      -- Re-order to previous/next
      map('n', '<A-<>', '<Cmd>BufferMovePrevious<CR>', opts)
      map('n', '<A->>', '<Cmd>BufferMoveNext<CR>', opts)

      -- Goto buffer in position...
      map('n', '<A-1>', '<Cmd>BufferGoto 1<CR>', opts)
      map('n', '<A-2>', '<Cmd>BufferGoto 2<CR>', opts)
      map('n', '<A-3>', '<Cmd>BufferGoto 3<CR>', opts)
      map('n', '<A-4>', '<Cmd>BufferGoto 4<CR>', opts)
      map('n', '<A-5>', '<Cmd>BufferGoto 5<CR>', opts)
      map('n', '<A-6>', '<Cmd>BufferGoto 6<CR>', opts)
      map('n', '<A-7>', '<Cmd>BufferGoto 7<CR>', opts)
      map('n', '<A-8>', '<Cmd>BufferGoto 8<CR>', opts)
      map('n', '<A-9>', '<Cmd>BufferGoto 9<CR>', opts)
      map('n', '<A-0>', '<Cmd>BufferLast<CR>', opts)

      -- Pin/unpin buffer
      map('n', '<A-p>', '<Cmd>BufferPin<CR>', opts)

      -- Goto pinned/unpinned buffer
      --                 :BufferGotoPinned
      --                 :BufferGotoUnpinned

      -- Close buffer
      map('n', '<A-w>', '<Cmd>BufferClose<CR>', opts)

      -- Wipeout buffer
      --                 :BufferWipeout

      -- Close commands
      --                 :BufferCloseAllButCurrent
      --                 :BufferCloseAllButPinned
      --                 :BufferCloseAllButCurrentOrPinned
      --                 :BufferCloseBuffersLeft
      --                 :BufferCloseBuffersRight

      -- Magic buffer-picking mode
      map('n', '<C-p>', '<Cmd>BufferPick<CR>', opts)
      map('n', '<C-s-p>', '<Cmd>BufferPickDelete<CR>', opts)

      -- Sort automatically by...
      -- <space>b 和jump快捷键有重复影响jump快捷键的响应
      -- map('n', '<Space>bb', '<Cmd>BufferOrderByBufferNumber<CR>', opts)
      -- map('n', '<Space>bn', '<Cmd>BufferOrderByName<CR>', opts)
      -- map('n', '<Space>bd', '<Cmd>BufferOrderByDirectory<CR>', opts)
      -- map('n', '<Space>bl', '<Cmd>BufferOrderByLanguage<CR>', opts)
      -- map('n', '<Space>bw', '<Cmd>BufferOrderByWindowNumber<CR>', opts)

      -- Other:
      -- :BarbarEnable - enables barbar (enabled by default)
      -- :BarbarDisable - very bad command, should never be used

      map('n', '<A-t>', '<Cmd>tabnew<CR>', opts)

      -- 多标签页的情况下，修改了一个标签页下的内容按ZZ保存并退出需要按两次，这里做处理只需要按一次
      vim.api.nvim_create_autocmd('WinClosed', {
        callback = function(tbl)
          if vim.api.nvim_buf_is_valid(tbl.buf) then
            vim.api.nvim_buf_delete(tbl.buf, { force = true })
          end
        end,
        group = vim.api.nvim_create_augroup('barbar_close_buf', {}),
      })
    end,
    opts = {
      -- lazy.nvim will automatically call setup for you. put your options here, anything missing will use the default:
      -- animation = true,
      -- insert_at_start = true,
      -- …etc.
      -- Automatically hide the tabline when there are this many buffers left.
      -- Set to any value >=0 to enable.
      auto_hide = true,
      -- Enable/disable current/total tabpages indicator (top right corner)
      tabpages = true,

      -- Enables/disable clickable tabs
      --  - left-click: go to buffer
      --  - middle-click: delete buffer
      clickable = true,
      -- Enable highlighting visible buffers
      highlight_visible = true,
      icons = {
        -- Configure the base icons on the bufferline.
        -- Valid options to display the buffer index and -number are `true`, 'superscript' and 'subscript'
        buffer_index = true,
        buffer_number = false,
      },
    },
    version = '^1.0.0', -- optional: only update when a new 1.x version is released
  },
  -- buffer的管理，本想着用这个插件配合barbar.nvim能解决多标签页的情况下ZQ退出标签页不能正常退出的问题，但是用了这个插件反而无法显示多标签页了
  {
    'tiagovla/scope.nvim',
    event = { 'BufReadPre', 'BufNewFile' },
    config = function()
      require('scope').setup {
        hooks = {
          pre_tab_leave = function()
            vim.api.nvim_exec_autocmds('User', { pattern = 'ScopeTabLeavePre' })
            -- [other statements]
          end,

          post_tab_enter = function()
            vim.api.nvim_exec_autocmds('User', { pattern = 'ScopeTabEnterPost' })
            -- [other statements]
          end,

          -- [other hooks]
        },

        -- [other options]
      }
    end,
  },

